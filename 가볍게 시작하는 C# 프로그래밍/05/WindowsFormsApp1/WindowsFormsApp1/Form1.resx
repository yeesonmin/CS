<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>